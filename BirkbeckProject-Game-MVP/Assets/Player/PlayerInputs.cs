//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Player/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""PlayerInputMap"",
            ""id"": ""f3d07b91-ea02-488c-a327-f9681f891e7b"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""cc980268-209a-47ff-97f7-e5c209c9c5ba"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""a702f990-7b45-44f8-b573-f0dc78985028"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""557f2433-8f08-4d6c-89fe-58e7ec6a4837"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseButtonLeft"",
                    ""type"": ""Button"",
                    ""id"": ""2f6df93d-82e6-4e21-b85b-627cd78fb902"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseButtonRight"",
                    ""type"": ""Button"",
                    ""id"": ""c40f4a62-c748-4477-8922-a184c876d587"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftShift"",
                    ""type"": ""Button"",
                    ""id"": ""630c3663-7ba4-4043-aa51-5e7073d3c442"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b8e8aa37-2fdb-463c-9bc4-e04c607ee7c0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""5afc580e-9dcc-4198-979d-2c57fbd17de4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7ffcd650-bfea-48bc-8107-5b4e5d46d8db"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6df124f9-b9ee-42f7-98b4-5256200e3c5e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4972f86d-c69a-4cb8-94dc-bfcbe27303e1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c39c6ecc-7d20-4310-bc62-aa9d8acbc519"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2dd1c684-5a50-4abd-bb36-1ecf474de521"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ffbc46ef-b563-4816-918d-a0db3ed5af36"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2d3478cf-d662-46b8-9dbc-9984c7a0e28b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""22b931ce-cd6f-4f9c-8641-0b31e11dab96"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e61f425c-277b-4d16-b3f1-2d92396cee16"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0f1eb25b-ab0f-4262-b4c6-00f252a733f5"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ccedeb99-8803-4fc3-ae43-1358a9f1aa69"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseButtonLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93a1484a-0b3d-4204-a65e-db04f957c7a0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseButtonRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b8410c1-be33-4dbe-85d6-e4777b608918"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftShift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerInputMap
        m_PlayerInputMap = asset.FindActionMap("PlayerInputMap", throwIfNotFound: true);
        m_PlayerInputMap_Movement = m_PlayerInputMap.FindAction("Movement", throwIfNotFound: true);
        m_PlayerInputMap_Jump = m_PlayerInputMap.FindAction("Jump", throwIfNotFound: true);
        m_PlayerInputMap_MousePosition = m_PlayerInputMap.FindAction("MousePosition", throwIfNotFound: true);
        m_PlayerInputMap_MouseButtonLeft = m_PlayerInputMap.FindAction("MouseButtonLeft", throwIfNotFound: true);
        m_PlayerInputMap_MouseButtonRight = m_PlayerInputMap.FindAction("MouseButtonRight", throwIfNotFound: true);
        m_PlayerInputMap_LeftShift = m_PlayerInputMap.FindAction("LeftShift", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerInputMap
    private readonly InputActionMap m_PlayerInputMap;
    private IPlayerInputMapActions m_PlayerInputMapActionsCallbackInterface;
    private readonly InputAction m_PlayerInputMap_Movement;
    private readonly InputAction m_PlayerInputMap_Jump;
    private readonly InputAction m_PlayerInputMap_MousePosition;
    private readonly InputAction m_PlayerInputMap_MouseButtonLeft;
    private readonly InputAction m_PlayerInputMap_MouseButtonRight;
    private readonly InputAction m_PlayerInputMap_LeftShift;
    public struct PlayerInputMapActions
    {
        private @PlayerInputs m_Wrapper;
        public PlayerInputMapActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerInputMap_Movement;
        public InputAction @Jump => m_Wrapper.m_PlayerInputMap_Jump;
        public InputAction @MousePosition => m_Wrapper.m_PlayerInputMap_MousePosition;
        public InputAction @MouseButtonLeft => m_Wrapper.m_PlayerInputMap_MouseButtonLeft;
        public InputAction @MouseButtonRight => m_Wrapper.m_PlayerInputMap_MouseButtonRight;
        public InputAction @LeftShift => m_Wrapper.m_PlayerInputMap_LeftShift;
        public InputActionMap Get() { return m_Wrapper.m_PlayerInputMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerInputMapActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerInputMapActions instance)
        {
            if (m_Wrapper.m_PlayerInputMapActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnJump;
                @MousePosition.started -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMousePosition;
                @MouseButtonLeft.started -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMouseButtonLeft;
                @MouseButtonLeft.performed -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMouseButtonLeft;
                @MouseButtonLeft.canceled -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMouseButtonLeft;
                @MouseButtonRight.started -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMouseButtonRight;
                @MouseButtonRight.performed -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMouseButtonRight;
                @MouseButtonRight.canceled -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnMouseButtonRight;
                @LeftShift.started -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnLeftShift;
                @LeftShift.performed -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnLeftShift;
                @LeftShift.canceled -= m_Wrapper.m_PlayerInputMapActionsCallbackInterface.OnLeftShift;
            }
            m_Wrapper.m_PlayerInputMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @MouseButtonLeft.started += instance.OnMouseButtonLeft;
                @MouseButtonLeft.performed += instance.OnMouseButtonLeft;
                @MouseButtonLeft.canceled += instance.OnMouseButtonLeft;
                @MouseButtonRight.started += instance.OnMouseButtonRight;
                @MouseButtonRight.performed += instance.OnMouseButtonRight;
                @MouseButtonRight.canceled += instance.OnMouseButtonRight;
                @LeftShift.started += instance.OnLeftShift;
                @LeftShift.performed += instance.OnLeftShift;
                @LeftShift.canceled += instance.OnLeftShift;
            }
        }
    }
    public PlayerInputMapActions @PlayerInputMap => new PlayerInputMapActions(this);
    public interface IPlayerInputMapActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouseButtonLeft(InputAction.CallbackContext context);
        void OnMouseButtonRight(InputAction.CallbackContext context);
        void OnLeftShift(InputAction.CallbackContext context);
    }
}
